#!/usr/bin/env python
#-*- coding:utf-8 -*-
# 
# os., sys., - python2.7.1+ (en, tab)
#
#from PyQt4.QtCore import *; from PyQt.QtGui import *;
#from pygame import *; pygame.init();
#from math import *; from random import*;
import os; import sys;
from pygtk import *
from gtk import *
from math import sqrt

def sig(n):
	'''
	sig(n) -> sum\n
	Returns the sum of positive divisors of n. (without n)
	'''
	sum = 0
	for i in xrange(1, int(sqrt(n)+1), 1):
		if not n%i:
			sum += i
	return sum

def get_divisors(numbre):
	diviseurs = list()
	for i in xrange(1, numbre+1, 2): # even numbers aren't prime
		if not numbre%i:
			diviseurs.append(i)
	returned = '\n'
	j=0
	for number in diviseurs:
		returned = returned + str(number) + '; '
		j+=1
		if not j%10:
			returned = returned + '\n'
	return returned

def prime(n):
	return (sig(n) == 1)

def gauss(n):
	sum = 0
	for i in range(0, n+1, 1):
		sum += i
	return sum

class GUI:
	def __init__(self):
		self.win = Window()
		self.win.connect('destroy', main_quit)
		self.win.set_title("Divisors")
		self.win.set_size_request(450, 200)
		
		self.validate = Button("Validate")
		self.validate.connect("clicked", self.calculate)
		
		self.lab_prime = Label("")
		self.lab_divisors = Label("")
		self.enter_a_number = Entry()
		self.enter_a_number.connect("activate", self.calculate)
		
		self.h_box = HBox(2)
		self.v_box = VBox(2)
		self.v1_box = VBox(2)
		self.v_box.pack_start(self.enter_a_number)
		self.v_box.pack_start(self.validate)
		self.v1_box.pack_start(self.lab_prime)
		self.v1_box.pack_start(self.lab_divisors)
		
		self.h_box.pack_start(self.v_box)
		self.h_box.pack_start(self.v1_box)
		self.win.add(self.h_box)
		self.win.show_all()
		
	def calculate(self, widget):
		if prime(int(self.enter_a_number.get_text())):
			self.lab_prime.set_text(self.enter_a_number.get_text() + " is a prime number.")
			self.lab_divisors.set_text("")
			
		else:
			self.lab_divisors.set_text("The positive divisors of " + str(self.enter_a_number.get_text()) + " are :" + str(get_divisors(int(self.enter_a_number.get_text()))) + '.')

			self.lab_prime.set_text(self.enter_a_number.get_text() + " is not a prime number.")

GUI()
main()



